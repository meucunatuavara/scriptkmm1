local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera
local Teams = game:GetService("Teams")

local localPlayer = Players.LocalPlayer
local target = nil
local aiming = false
local espEnabled = false  -- Variável para controlar o estado do ESP
local aimbotEnabled = false  -- Variável para controlar o estado do aimbot

-- Configurações ajustadas para o aimbot
local aimKey = Enum.UserInputType.MouseButton2  -- Botão direito do mouse
local toggleESPKey = Enum.KeyCode.Q  -- Tecla Q para ativar/desativar o ESP
local toggleAimbotKey = Enum.KeyCode.E  -- Tecla E para ativar/desativar o aimbot
local fovRadius = 50  -- Raio do FOV

-- Desenho do círculo do FOV
local fovCircle = Drawing.new("Circle")
fovCircle.Visible = false
fovCircle.Color = Color3.new(1, 1, 0)
fovCircle.Thickness = 2
fovCircle.Filled = false
fovCircle.Radius = fovRadius
fovCircle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

-- Função para criar destaque (ESP) para jogadores
local function createHighlight(player)
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and not player.Character:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.Name = "Highlight"
        highlight.Adornee = player.Character
        highlight.FillTransparency = 0.5
        highlight.OutlineTransparency = 0.1
        highlight.Parent = player.Character

        if player.Team then
            highlight.FillColor = player.Team.TeamColor.Color
        else
            highlight.FillColor = Color3.new(1, 0, 0)  -- Caso não tenha time
        end
    end
end

-- Função para atualizar o ESP
local function updateESP()
    for _, player in ipairs(Players:GetPlayers()) do
        -- Adiciona um highlight para cada jogador com personagem visível
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            createHighlight(player)
        end
    end
end

-- Função para remover o ESP
local function removeESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Highlight") then
            player.Character.Highlight:Destroy()
        end
    end
end

-- Função para encontrar o jogador mais próximo no FOV
local function findTarget()
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
            local head = player.Character:FindFirstChild("Head")

            -- Verifica se a cabeça do jogador está visível no FOV
            if humanoidRootPart and head then
                local screenPosition, onScreen = Camera:WorldToViewportPoint(head.Position)
                local distance = (humanoidRootPart.Position - Camera.CFrame.Position).magnitude

                -- Verifica se o jogador está dentro do FOV e se está no centro
                if onScreen and distance < shortestDistance and (Vector2.new(screenPosition.X, screenPosition.Y) - Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)).Magnitude < fovRadius then
                    closestPlayer = player
                    shortestDistance = distance
                    target = player
                end
            end
        end
    end

    return closestPlayer
end

-- Função do aimbot para ajustar a câmera (agora mirando na cabeça)
local function aimbot()
    if aiming and target then
        local head = target.Character:FindFirstChild("Head")
        if head then
            local targetPosition = head.Position  -- Mire na cabeça
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPosition)  -- Ajusta a câmera para olhar para a cabeça
        end
    end
end

UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == toggleESPKey then
        espEnabled = not espEnabled
        if espEnabled then
            print("ESP ativado.")
            updateESP()
        else
            print("ESP desativado.")
            removeESP()
        end
    end

    if input.KeyCode == toggleAimbotKey then
        aimbotEnabled = not aimbotEnabled
        if aimbotEnabled then
            print("Aimbot ativado.")
        else
            print("Aimbot desativado.")
            aiming = false  -- Desliga o aimbot caso o usuário desative
            target = nil  -- Limpa o alvo
        end
    end

    if input.UserInputType == aimKey and aimbotEnabled then
        target = findTarget()  -- Quando o botão direito do mouse for pressionado, encontra o alvo
        aiming = true  -- Ativa o aimbot
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == aimKey then
        aiming = false  -- Quando o botão direito do mouse for solto, o aimbot desgruda
        target = nil  -- Limpa o alvo
    end
end)

RunService.RenderStepped:Connect(function()
    fovCircle.Position = UserInputService:GetMouseLocation()  -- Atualiza o círculo do FOV
    if espEnabled then
        updateESP()  -- Atualiza o ESP se estiver ativado
    end
    if aimbotEnabled then
        aimbot()  -- Aplica o aimbot se estiver ativo e mirando
    end
end)
